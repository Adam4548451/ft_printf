START
    int i
    char *pt;
    char *output
    char *str_arg
    va_list args;

    pt = string;
    output = NULL;
    va_start(args, string);
i = count_character(string, '%')
//WHILE THERE ARE STILL % TO HANDLE
while (i-- > 0)
{
    output = dupCatResize(output, pt, ft_strchr(pt, (int)'%')
    if (!(pt = ft_strchr(pt, (int)'%')))
        break;
    if (isExigence1(*(pt++)))
        if(*pt == '%')
            i--;
        else if (ft_isspace((int)pt[1]) || !pt[1])
        {
            str_arg = convert_ex1(pt, args);
            output = dupCatResize(output, str_arg, NULL);
            free(str_arg);
        }
        else
            return (-1) /*ERROR WITH THE SYMBOL THAT COMES AFTER %X[] */
    else if (isExigence2(*pt))
        (...)
    else
        return (-1) /* NO EXIGENCE MET, OPERATOR NOT RECOGNIZED */
    pt++;
}
va_end(args)
if (pt)
    output = dupCatResize(output, pt, NULL);
print the output with pustr
return ft_strlen(output)